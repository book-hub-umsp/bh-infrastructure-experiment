name: Docker Publish and Deploy

on:
  workflow_call:


env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKER_USER: ${{ github.actor }}
  DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  NOMAD_ADDR: https://your-nomad-cluster.example.com  # Добавьте адрес вашего Nomad кластера

jobs:
  build-and-deploy:
    outputs:
      version-value: ${{ steps.meta.outputs.tags }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Шаги сборки и публикации Docker образа (остаются без изменений)
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20
        with:
          cosign-release: 'v2.2.4'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ github.ref_name }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09
        with:
          file: docker/Dockerfile
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # Новый шаг: Деплой в Nomad с использованием ограниченного токена
      - name: Deploy to Nomad
        if: github.event_name != 'pull_request' && success()
        env:
          NOMAD_TOKEN: ${{ secrets.NOMAD_DEPLOY_TOKEN }}  # Используем новый токен
        run: |
          # Установка Nomad CLI
          sudo apt-get update
          sudo apt-get install -y nomad

          # Проверка доступа
          nomad acl token self

          # Деплой приложения
          echo "Deploying to Nomad cluster..."
          cd bh-infrastructure
          nomad job run bh-back.hcl
          nomad job run bh-front.hcl

          # Проверка статуса
          echo "Deployment status:"
          nomad job status -namespace=book-hub
